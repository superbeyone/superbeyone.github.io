<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>superbeyone</title>
  <icon>https://www.gravatar.com/avatar/c5dbc3b350392f6c982501d331880242</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://superbeyone.info/"/>
  <updated>2018-04-13T13:42:47.554Z</updated>
  <id>http://superbeyone.info/</id>
  
  <author>
    <name>superbeyone</name>
    <email>superbeyone.@outlook.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue学习笔记第一天</title>
    <link href="http://superbeyone.info/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B8%80%E5%A4%A9.html"/>
    <id>http://superbeyone.info/Vue学习笔记第一天.html</id>
    <published>2018-04-13T14:28:34.762Z</published>
    <updated>2018-04-13T13:42:47.554Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vue常用指令及入门"><a href="#vue常用指令及入门" class="headerlink" title="vue常用指令及入门"></a>vue常用指令及入门</h2><a id="more"></a><h3 id="开车啦，快上车"><a href="#开车啦，快上车" class="headerlink" title="开车啦，快上车~~~"></a>开车啦，快上车~~~</h3><h4 id="上车准备"><a href="#上车准备" class="headerlink" title="上车准备"></a>上车准备</h4><p> 1.后端代码的抽取感觉还可以，前端代码抽取懵，关于哪个需要依赖、注入，哪个不需要依赖、注入，不懂？ </p><pre><code>输入服务 是需要使用的时候配置期  config -&gt; 可以注入供应商服务对象，对于具体服务进行配置运行期  非config都算是运行期    service/factory(通过return 返回任意类型对象)/controller/derective/filter以上都可以用来注入服务对象（service/factory）如何区分是否能依赖注入    形参名基本以$开头    //根据顺序来的    link:function(scope,element,attrs)</code></pre><p> 2.自己建了一个服务器，数据库，可是这个项目还是不知道从哪开始敲起<br>        看需求有哪些页面，配置路由显示页面，根据API接口完成页面上的动态数据交互<br>3.webpack-dev-server 再讲一下吧，还是不太懂<br>    工具，在学校的时候，要掌握的东西是重点学习的东西，而不是工具<br>    在企业开发中，遇上了相关问题，再去看看别的东西<br>    让大家不用去关注除了主核心以外的东西<br>    –inline –hot –open –port 9999</p><p> 老师,能不能给点时间练练<br>     保留最终解释权<br>  黑马岳父, angular飞晕了, node飞丢了, vue稍微稳点飞, vue是最后的杀手锏了, 也是唯一能吹牛的资本了</p><pre><code>1:主要学习的是VUE，快速进入VUE让大家体会VUE的使用2:webpack前端构建构建，前期铺垫基本使用，后面看到不晕3:在做完项目以后，模拟项目开发的真实打包，区分打包的意义所在(webpack)</code></pre><h4 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h4><ul><li>webpack属性配置</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:&#123; main是默认入口,也可以是多入口</span><br><span class="line">        main:<span class="string">'./src/main.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    出口</span><br><span class="line">    output:&#123;</span><br><span class="line">        filename:<span class="string">'./build.js'</span>, 指定js文件</span><br><span class="line">        path: path.join(__dirname,<span class="string">'..'</span>,<span class="string">'dist'</span>,)          最好是绝对路径</span><br><span class="line">        代表当前目录的上一级的dist</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>:&#123;</span><br><span class="line">        一样的功能rules:   webpack2.x之后新加的</span><br><span class="line">        loaders:[       <span class="built_in">require</span>(<span class="string">'./a.css||./a.js'</span>)</span><br><span class="line">            &#123;<span class="attr">test</span>:<span class="regexp">/\.css$/</span>,</span><br><span class="line">             loader:<span class="string">'style-loader!css-loader'</span>,</span><br><span class="line">             顺序是反过来的<span class="number">2</span>!<span class="number">1</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">             test:<span class="regexp">/\.(jpg|svg)$/</span>,</span><br><span class="line">             loader:<span class="string">'url-loader?limit=4096&amp;name=[name].[ext]'</span>,</span><br><span class="line">             顺序是反过来的<span class="number">2</span>!<span class="number">1</span> </span><br><span class="line">             [name].[ext]内置提供的，因为本身是先读这个文件</span><br><span class="line">             options:&#123;</span><br><span class="line">                limit:<span class="number">4096</span>,</span><br><span class="line">                name:<span class="string">'[name].[ext]'</span></span><br><span class="line">             &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    plugins:[</span><br><span class="line">        插件的执行顺序是依次执行的</span><br><span class="line">        <span class="keyword">new</span> htmlWebpackPlugin(&#123;</span><br><span class="line">            template:<span class="string">'./src/index.html'</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">            将src下的template属性描述的文件根据当前配置的output.path，将文件移动到该目录</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="今日重点"><a href="#今日重点" class="headerlink" title="今日重点"></a>今日重点</h4><ul><li>运行起来Vue</li><li>vue常用指令</li><li>组件的使用</li></ul><h3 id="es6"><a href="#es6" class="headerlink" title="es6"></a>es6</h3><hr><h4 id="webpack-ES6的处理"><a href="#webpack-ES6的处理" class="headerlink" title="webpack-ES6的处理"></a>webpack-ES6的处理</h4><ul><li>ES6的模块,vue本身默认支持es6的模块导入导出</li><li>babel<ul><li>babel-loader(内部依赖babel-core)<ul><li>关键字(presets  es2015)</li><li>函数(plugins babel-plugin-transform-runtime)</li></ul></li></ul></li></ul><h4 id="ES6中的模块"><a href="#ES6中的模块" class="headerlink" title="ES6中的模块"></a>ES6中的模块</h4><ul><li>默认<ul><li>导入<code>import [,..xxx] [,..from] &#39;./xxx.ext&#39;</code></li><li>导出 <code>export default obj;</code></li></ul></li><li>声明式<ul><li>1导出 <code>export var obj = xxx;</code></li><li>2导出 <code>export var obj2 = {};</code></li><li>3单独导出 <code>export {stu};</code></li><li>导入 <code>import {obj,obj2,stu} from &#39;./xxx.js&#39;;  直接使用obj</code></li></ul></li><li>全体</li><li>默认导出和声明式导入在使用上的区别<ul><li>要注意，声明式导入的时候，必须{名称} 名称要一致（按需导入)</li><li>默认导入，可以随意的使用变量名</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="keyword">default</span>:<span class="string">"我是默认导出的结果"</span>    </span><br><span class="line">        <span class="keyword">import</span> xxx <span class="keyword">from</span> <span class="string">'./cal.js'</span>会获取到整个对象的<span class="keyword">default</span>属性</span><br><span class="line">obj1:<span class="string">"我是声明式导出1"</span></span><br><span class="line">obj2:<span class="string">"我是声明式导出2"</span> </span><br><span class="line">obj3:<span class="string">"我是声明式导出3"</span>     <span class="keyword">import</span> &#123;obj1,obj2&#125;</span><br><span class="line">obj4:<span class="string">"我是声明式导出4"</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">import</span> * <span class="keyword">as</span> allObj <span class="keyword">from</span> <span class="string">'./cal.js'</span>;  获取的就是一整个对象</span><br></pre></td></tr></table></figure><ul><li>import 和export一定写在顶级，不要包含在{}内</li></ul><h4 id="ES6中的代码变化"><a href="#ES6中的代码变化" class="headerlink" title="ES6中的代码变化"></a>ES6中的代码变化</h4><ul><li>对象属性的声明 </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'abc'</span>;</span><br><span class="line"><span class="keyword">var</span> person = &#123;name&#125;; 简写-&gt; <span class="keyword">var</span> person = &#123;<span class="attr">name</span>:name&#125;;</span><br><span class="line"></span><br><span class="line">声明函数 </span><br><span class="line"><span class="keyword">var</span> cal = &#123;</span><br><span class="line">    add:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    add2()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    add3:funtion(n1,n2)&#123;</span><br><span class="line">        <span class="keyword">return</span> n1 + n2;</span><br><span class="line">    &#125;,</span><br><span class="line">    add4(n1,n2)&#123;  干掉了<span class="function"><span class="keyword">function</span></span></span><br><span class="line"><span class="function">        <span class="title">return</span> <span class="title">n1</span> + <span class="title">n2</span>;</span></span><br><span class="line"><span class="function">    &#125;</span></span><br><span class="line"><span class="function">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>当属性的key和变量的名相同,而要使用变量的值做value,</li><li>就可以简写{name}-&gt;{name:name}</li><li>es6中的函数声明<ul><li>就是干掉了:function    add(){ }</li></ul></li></ul><h4 id="vue单文件方式"><a href="#vue单文件方式" class="headerlink" title="vue单文件方式"></a>vue单文件方式</h4><ul><li>单文件就是以<em>.vue结尾的文件。最终通过webpack也会编译成</em>.js在浏览器运行</li><li>内容： <template></template> + <script></script> + <style></style><ul><li>1:template中只能有一个根节点 2.x</li><li>2:script中  按照 export default {配置} 来写</li><li>3:style中 可以设置scoped属性，让其只在template中生效</li></ul></li></ul><h4 id="以单文件的方式启动"><a href="#以单文件的方式启动" class="headerlink" title="以单文件的方式启动"></a>以单文件的方式启动</h4><ul><li>webpack找人来理解你的单文件代码<ul><li>vue-loader,vue-template-compiler,代码中依赖vue,</li></ul></li><li>启动命令</li><li><code>..\\node_modules\\.bin\\webpack-dev-server --inline --hot --open</code></li></ul><h4 id="vue介绍"><a href="#vue介绍" class="headerlink" title="vue介绍"></a>vue介绍</h4><ul><li>2014年诞生,2013年react,09年angularjs</li><li>作者 尤雨溪</li><li>核心概念:     组件化  双向数据流 (基于ES5中的defineProperty来实现的),IE9才支持</li><li>angular核心： 模块化 双向数据绑定(脏检测:一个数组（$watch）)<ul><li>开发一个登陆的模块，登陆需要显示的头部、底部、中部</li><li>组件:组合起来的一个部件（头部、底部、中部）</li><li><strong>细分代码</strong><ul><li>头部: 页面、样式、动态效果</li><li>代码: template style script</li></ul></li></ul></li><li>框架对比，建议学完vue再看</li><li><a href="https://cn.vuejs.org/v2/guide/comparison.html#React" target="_blank" rel="noopener">https://cn.vuejs.org/v2/guide/comparison.html#React</a></li></ul><h4 id="数据流"><a href="#数据流" class="headerlink" title="数据流"></a>数据流</h4><ul><li>1向：js内存属性发生改变，影响页面的变化</li><li>1向：页面的改变影响js内存属性的改变</li></ul><h4 id="vue中常用的v-指令演示"><a href="#vue中常用的v-指令演示" class="headerlink" title="vue中常用的v-指令演示"></a>vue中常用的v-指令演示</h4><ul><li>常用指令 </li><li>v-text 是元素的innerText只能在双标签中使用</li><li>v-html 是元素的innerHTML，不能包含<!-- –&gt;</li><li>v-if 元素是否移除或者插入</li><li>v-show 元素是否显示或隐藏</li><li>v-model 双向数据绑定，v-bind是单向数据绑定(内存js改变影响页面)</li></ul><h4 id="class结合v-bind使用"><a href="#class结合v-bind使用" class="headerlink" title="class结合v-bind使用"></a>class结合v-bind使用</h4><ul><li>需要根据可变的表达式的结果来给class赋值，就需要用到v-bind:class=”xxx”</li><li>v-bind:属性名=”表达式”，最终表达式运算结束的结果赋值给该属性名<ul><li>简化的写法是: <code>:属性名=&quot;表达式&quot;</code></li></ul></li><li>class:结果的分类<ul><li>一个样式: 返回字符串(三元表达式和key和样式的清单对象)</li><li>多个样式：返回对象(样式做key，true或flase做值)</li></ul></li></ul><h4 id="methods和v-on的使用"><a href="#methods和v-on的使用" class="headerlink" title="methods和v-on的使用"></a>methods和v-on的使用</h4><ul><li>绑定事件的方法<ul><li><code>v-on:事件名=&quot;表达式||函数名&quot;</code></li><li>简写: <code>@事件名=&quot;表达式||函数名&quot;</code></li></ul></li><li>函数名如果没有参数，可以省略()  只给一个函数名称</li><li>声明组件内函数，在export default这个对象的根属性加上methods属性，其是一个对象<ul><li>key 是函数名 值是函数体</li></ul></li><li>在export default这个对象的根属性加上data属性，其是一个函数，返回一个对象<ul><li>对象的属性是我们初始化的变量的名称</li></ul></li><li>凡是在template中使用变量或者函数，不需要加this</li><li>在script中使用就需要加上this</li></ul><h4 id="v-for的使用"><a href="#v-for的使用" class="headerlink" title="v-for的使用"></a>v-for的使用</h4><ul><li>可以使用操作数组 (item,index)</li><li><p>可以使用操作对象 (value,key,index)</p></li><li><p>key 是类似trank by 的一个属性</p></li><li>为的是告诉vue，js中的元素，与页面之间的关联，当识图删除元素的时候，是单个元素的删除而不是正版替换，所以需要关联其关系，设置(必须,性能)  </li><li>2.2.0+ 的版本里，当在组件中使用 v-for 时，key 现在是必须的。</li></ul><h4 id="漂亮的列表"><a href="#漂亮的列表" class="headerlink" title="漂亮的列表"></a>漂亮的列表</h4><h4 id="父子组件使用"><a href="#父子组件使用" class="headerlink" title="父子组件使用"></a>父子组件使用</h4><ul><li>父和子，使用的是父，被用的是子</li><li>父需要声明子组件，引入子组件对象，声明方式如下</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> 子组件对象 <span class="keyword">from</span> <span class="string">'./xxx.vue'</span>;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        components:&#123;</span><br><span class="line">            组件名:子组件对象</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>全局组件，使用更为方便，不需要声明，直接用</li><li>在main.js中引入一次，在main.js中使用 <code>vue.component(&#39;组件名&#39;,组件对象);</code></li><li>所有的组件就可以直接通过组件名，使用</li></ul><h4 id="父传子"><a href="#父传子" class="headerlink" title="父传子"></a>父传子</h4><ul><li>父组件通过子组件的属性将值进行传递<ul><li>方式有2:<ul><li>常量:  prop1=”常量值”</li><li>变量:  :prop2=”变量名”</li></ul></li></ul></li><li>子组件需要声明<ul><li>根属性props:[‘prop1’,’prop2’]</li><li>在页面中直接使用</li><li>在js中应该如何使用prop1？   this.prop1获取</li></ul></li></ul><h4 id="看文档的对象分类"><a href="#看文档的对象分类" class="headerlink" title="看文档的对象分类"></a>看文档的对象分类</h4><ul><li>1:全局的代表Vue.的</li><li>2:实例的代表this.或者new Vue().</li><li>3:选项代表 new Vue() 的参数</li><li>或者 export default里边的属性</li></ul><h4 id="子向父组件通信（vuebus）-扩展"><a href="#子向父组件通信（vuebus）-扩展" class="headerlink" title="子向父组件通信（vuebus）(扩展)"></a>子向父组件通信（vuebus）(扩展)</h4><ul><li>通过new Vue()这样的一个对象，来$on(‘事件名’,fn(prop1,pro2))</li><li>另一个组件引入同一个vuebus,  来$emit(‘事件名’,prop1,pro2)</li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>-1 : 已经存在node_modules包，已经存在package.json和webpack.config.js文件</li><li>1: 创建index.html,看看其所在文件和webpack.config.js文件中描述的关系</li><li>2: 在index.html div-&gt;id-&gt;app</li><li>3: 创建main.js,看看其所在文件和webpack.config.js文件中描述的关系</li><li>4: 在main.js中引入vue,和相关组件对象</li><li>5: new Vue(选项options) , 目的地el   渲染内容 render:c=&gt;c(App) 渲染App的内容</li><li>6: 编写app.vue <ul><li>template 在2.x以后只能有一个根节点</li><li>script 格式是export default { 选项options}</li><li>style 加上scoped（范围的）之后，样式只对当前模板有效</li></ul></li><li>7: 可能使用组件或者使用函数或者接受参数<ul><li>options(根属性):<ul><li>data 是一个函数,return一个对象</li><li>methods 是一个对象,key是函数名,value是函数体</li><li>components 是一个对象,key是组件名,值是组件对象</li><li>props 是一个数组,元素是多个接受的参数</li></ul></li></ul></li><li>8: 套路总结<ul><li>凡是在上边可以使用的东西</li><li>在下边就可以使用，通过this.</li></ul></li><li>9:启动<ul><li>进入到webpack.config.js 和package.json文件同在的目录中启动命令行</li><li>输入: 正在编码:  npm run dev <ul><li>报错: 检查命令所执行的../ 上级,是否存在node_modules目录及相关文件是否存在</li></ul></li><li>输入: 代码编写完毕，提交到公司 :  npm run build</li></ul></li></ul><h4 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h4><h4 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h4><h4 id="vue构建方式"><a href="#vue构建方式" class="headerlink" title="vue构建方式"></a>vue构建方式</h4>--></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;vue常用指令及入门&quot;&gt;&lt;a href=&quot;#vue常用指令及入门&quot; class=&quot;headerlink&quot; title=&quot;vue常用指令及入门&quot;&gt;&lt;/a&gt;vue常用指令及入门&lt;/h2&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://superbeyone.info/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://superbeyone.info/tags/Vue/"/>
    
      <category term="学习笔记" scheme="http://superbeyone.info/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="前端开发" scheme="http://superbeyone.info/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Vue学习笔记第四天</title>
    <link href="http://superbeyone.info/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%AC%AC%E5%9B%9B%E5%A4%A9.html"/>
    <id>http://superbeyone.info/Vue学习笔记第四天.html</id>
    <published>2018-04-13T14:28:34.759Z</published>
    <updated>2018-04-13T13:54:37.648Z</updated>
    
    <content type="html"><![CDATA[<h2 id="购物车、webpack打包优化"><a href="#购物车、webpack打包优化" class="headerlink" title="购物车、webpack打包优化"></a>购物车、webpack打包优化</h2><a id="more"></a><h4 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h4><h4 id="今日重点"><a href="#今日重点" class="headerlink" title="今日重点"></a>今日重点</h4><h4 id="导航钩子"><a href="#导航钩子" class="headerlink" title="导航钩子"></a>导航钩子</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">beforeRouteEnter (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">    在渲染该组件的对应路由被 confirm 前调用</span><br><span class="line">    不！能！获取组件实例 <span class="string">`this`</span></span><br><span class="line">    因为当钩子执行前，组件实例还没被创建</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeRouteUpdate (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">     在当前路由改变，但是该组件被复用时调用</span><br><span class="line">     举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/<span class="number">1</span> 和 /foo/<span class="number">2</span> 之间跳转的时候，</span><br><span class="line">     由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。</span><br><span class="line">     可以访问组件实例 <span class="string">`this`</span></span><br><span class="line">  &#125;,</span><br><span class="line">  beforeRouteLeave (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">     导航离开该组件的对应路由时调用</span><br><span class="line">     可以访问组件实例 <span class="string">`this`</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;购物车、webpack打包优化&quot;&gt;&lt;a href=&quot;#购物车、webpack打包优化&quot; class=&quot;headerlink&quot; title=&quot;购物车、webpack打包优化&quot;&gt;&lt;/a&gt;购物车、webpack打包优化&lt;/h2&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://superbeyone.info/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://superbeyone.info/tags/Vue/"/>
    
      <category term="学习笔记" scheme="http://superbeyone.info/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="前端开发" scheme="http://superbeyone.info/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Vue学习笔记第三天</title>
    <link href="http://superbeyone.info/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B8%89%E5%A4%A9.html"/>
    <id>http://superbeyone.info/Vue学习笔记第三天.html</id>
    <published>2018-04-13T14:28:34.756Z</published>
    <updated>2018-04-13T13:43:02.696Z</updated>
    
    <content type="html"><![CDATA[<h2 id="axios补充、计算属性、主页、新闻"><a href="#axios补充、计算属性、主页、新闻" class="headerlink" title="axios补充、计算属性、主页、新闻"></a>axios补充、计算属性、主页、新闻</h2><a id="more"></a><h4 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h4><ul><li><p>路由操作的基本步骤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">引入对象</span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span>;</span><br><span class="line">安装插件</span><br><span class="line">Vue.use(VueRouter);   挂载属性的行为</span><br><span class="line">创建路由对象</span><br><span class="line"><span class="keyword">let</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    routes:[</span><br><span class="line">        &#123; <span class="attr">name</span>:<span class="string">'xxx'</span>,<span class="attr">path</span>:<span class="string">'/xxx'</span>,组件  &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br><span class="line">将路由对象放入到options中<span class="keyword">new</span> Vue()</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    router</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>套路</p><ul><li>1: 去哪里  <router-link :to="{name:'bj'}"></router-link></li><li>2: 导航(配置路由规则) <code>{name:&#39;bj&#39;,path:&#39;/beijing&#39;,组件A}</code></li><li>3: 去了干嘛(在组件A内干什么)<ul><li>在created事件函数中，获取路由参数</li><li>发起请求，把数据挂载上去</li></ul></li></ul></li><li>参数<ul><li>查询字符串（#/beijing?id=1&amp;age=2）<ul><li>1: 去哪里  <router-link :to="{name:'bj',query:{id:1,age:2}  }"></router-link></li><li>2: 导航(配置路由规则) <code>{name:&#39;bj&#39;,path:&#39;/beijing&#39;,组件A}</code></li><li>3: 去了干嘛(在组件A内干什么)<ul><li><code>this.$route.query.id||age</code></li></ul></li></ul></li><li>path(#/beijing/1/2)<ul><li>1: 去哪里  <router-link :to="{name:'bj',params:{id:1,age:2}  }"></router-link></li><li>2: 导航(配置路由规则) <code>{name:&#39;bj&#39;,path:&#39;/beijing/:id/:age&#39;,组件A}</code></li><li>3: 去了干嘛(在组件A内干什么)<ul><li><code>this.$route.params.id||age</code></li></ul></li></ul></li></ul></li><li>编程导航<ul><li>一个获取信息的只读对象($route)</li><li>一个具备功能函数的对象($router)</li><li>根据浏览器历史记录前进和后台 <code>this.$router.go(1|-1);</code></li><li>跳转到指定路由  <code>this.$router.push({ name:&#39;bj&#39;  });</code></li></ul></li><li>嵌套路由<ul><li>让变化的视图(router-view)产生包含关系(router-view)</li><li>让路由与router-view关联，并且也产生父子关系</li></ul></li><li><p>多视图</p><ul><li>让视图更为灵活，以前一个一放，现在可以放多个，通过配置可以去修改</li></ul></li><li><p>axios:</p><ul><li>开始:<ul><li>跨域 + 默认的头是因为你的数据是对象，所以content-type:application/json</li><li>有OPTIONS预检请求（浏览器自动发起）</li></ul></li><li>最终:<ul><li>当我们调整为字符串数据，引起content-type变为了www键值对</li><li>没有那个OPTIONS预检请求</li></ul></li><li>总结： 跨域 + application/json 会引起OPTIONS预检请求，并且自定义一个头(提示服务器，这次的content-type较为特殊)，content-type的值</li><li>服务器认为这个是一次请求，而没有允许content-type的头，</li><li>浏览器就认为服务器不一定能处理掉这个特殊的头的数据</li><li>抛出异常</li><li>在node服务器 response.setHeader(“Access-Control-Allow-Headers”,”content-type,多个”);</li><li>formdata的样子:  key=value&amp;key=value</li></ul></li><li><p>axios属性关系</p><ul><li>options: headers、baseURL、params</li><li>默认全局设置(大家都是这么用)<ul><li>Axios.defaults-&gt; options对象</li></ul></li><li>针对个别请求来附加options</li><li>axios.get(url,options)</li><li>axios.post(url,data,options)</li></ul></li></ul><h4 id="今日重点"><a href="#今日重点" class="headerlink" title="今日重点"></a>今日重点</h4><ul><li>axios</li><li>watch</li><li>计算属性</li><li>项目</li></ul><h4 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h4><ul><li>合并请求</li><li>axios.all([请求1,请求2])</li><li>分发响应  axios.spread(fn)</li><li>fn:对应参数(res)和请求的顺序一致</li><li>应用场景:<ul><li>必须保证两次请求都成功，比如，分头获取省、市的数据</li></ul></li><li>执行特点: 只要有一次失败就算失败，否则成功</li></ul><h4 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h4><ul><li>过滤，在每一次请求与响应中、添油加醋</li><li>axios.interceptors.request.use(fn)  在请求之前</li><li>function(config){ config.headers = { xxx }}   config 相当于options对象</li><li>默认设置 defaults 范围广、权利小</li><li>单个请求的设置options get(url,options)  范围小、权利中</li><li>拦截器 范围广、权利大</li></ul><h4 id="token-扩展"><a href="#token-扩展" class="headerlink" title="token(扩展)"></a>token(扩展)</h4><ul><li>cookie 和session的机制，cookie自动带一个字符串</li><li>cookie只在浏览器</li><li>移动端原生应用，也可以使用http协议，1:可以加自定义的头、原生应用没有cookie</li><li>对于三端来讲，token可以作为类似cookie的使用，并且可以通用</li><li>拦截器可以用在添加token上</li></ul><h4 id="拦截器操作loadding"><a href="#拦截器操作loadding" class="headerlink" title="拦截器操作loadding"></a>拦截器操作loadding</h4><ul><li>在请求发起前open，在响应回来后close</li></ul><h4 id="监视"><a href="#监视" class="headerlink" title="监视"></a>监视</h4><ul><li>watch 可以对（单个）变量进行监视，也可以深度监视</li><li>如果需求是对于10个变量进行监视？</li><li>计算属性computed 可以监视多个值，并且指定返回数据，并且可以显示在页面</li><li>都是options中的根属性<ul><li>watch监视单个</li><li>computed可以监视多个this相关属性值的改变,如果和原值一样</li><li>不会触发函数的调用，并且可以返回对象</li></ul></li></ul><h4 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i mint-ui vue-preview axios vue-router monent vue - S;</span><br><span class="line">npm i webpack html - webpack - plugin css - loader style - loader less less - loader autoprefixer - loader babel - loader babel - core babel - preset - es2015 babel - plugin - transform - runtime url - loader file - loader vue - loader vue - template - compiler webpack-dev-server - D</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;axios补充、计算属性、主页、新闻&quot;&gt;&lt;a href=&quot;#axios补充、计算属性、主页、新闻&quot; class=&quot;headerlink&quot; title=&quot;axios补充、计算属性、主页、新闻&quot;&gt;&lt;/a&gt;axios补充、计算属性、主页、新闻&lt;/h2&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://superbeyone.info/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://superbeyone.info/tags/Vue/"/>
    
      <category term="学习笔记" scheme="http://superbeyone.info/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="前端开发" scheme="http://superbeyone.info/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Vue学习笔记第二天</title>
    <link href="http://superbeyone.info/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%BA%8C%E5%A4%A9.html"/>
    <id>http://superbeyone.info/Vue学习笔记第二天.html</id>
    <published>2018-04-13T14:28:34.754Z</published>
    <updated>2018-04-13T13:39:59.142Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vue-router、axios"><a href="#vue-router、axios" class="headerlink" title="vue-router、axios"></a>vue-router、axios</h2><a id="more"></a><h4 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h4><ul><li>vue单文件方式 xxx.vue</li><li>1:准备好配置文件 package.json(包描述文件&amp;&amp; 封装命令npm run dev) + webpack.config.js文件（打包的配置文件）</li><li>2:创建index.html（单页应用的页）</li><li>3:创建main.js(入口文件) </li><li>4:引入vue和相关的文件xxx.vue</li><li>5:new Vue(options)</li><li>6:options（选项）: <ul><li>data</li><li>methods</li><li>components（组件内声明子组件)</li><li>props</li></ul></li><li>7:实例:<ul><li>在组件内（xxx.vue）中的this</li><li>new Vue()</li><li>事件<ul><li>this.$on(事件名,回调函数(参数))</li><li>this.$emit(事件名,数据)</li><li>this.$once(事件名,回调函数(参数)) 就触发一次</li><li>this.$off(事件名); 取消事件</li></ul></li></ul></li><li>8:全局<ul><li>Vue.component(‘组件名’,组件对象)  在哪里都可以使用</li></ul></li><li>9: 组件传值<ul><li>父传子: 属性作为参数<ul><li>常量 title=”xxx”   子组件声明接收参数 props:[‘xxx’]</li><li>变量 :title=”num”  子组件声明接收参数 props:[‘xxx’]</li></ul></li><li>子传父: vuebus（只能是同一辆车）<ul><li>先停车到父组件，On一下</li><li>再开车到子组件，如果需要的话，emit一下，触发上述时间的回调函数</li></ul></li></ul></li></ul><h4 id="今日重点"><a href="#今日重点" class="headerlink" title="今日重点"></a>今日重点</h4><ul><li>vue组件的使用</li><li>组件间通信</li><li>vue-router使用</li><li>vue-resource发起http请求</li><li>axios</li></ul><h4 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h4><ul><li>content | 过滤器,vue中没有提供相关的内置过滤器,可以自定义过滤器</li><li>组件内的过滤器 + 全局过滤器<ul><li>组件内过滤器就是options中的一个filters的属性（一个对象）<ul><li>多个key就是不同过滤器名,多个value就是与key对应的过滤方式函数体</li></ul></li><li><code>Vue.filter(名,fn)</code></li></ul></li><li>输入的内容帮我做一个反转</li><li>例子:父已托我帮你办点事</li><li>总结<ul><li>全局 ：范围大，如果出现同名时，权利小</li><li>组件内: 如果出现同名时，权利大，范围小</li></ul></li></ul><h4 id="获取DOM元素"><a href="#获取DOM元素" class="headerlink" title="获取DOM元素"></a>获取DOM元素</h4><ul><li>救命稻草, 前端框架就是为了减少DOM操作，但是特定情况下，也给你留了后门</li><li>在指定的元素上，添加ref=”名称A”</li><li>在获取的地方加入 this.$refs.名称A  <ul><li>如果ref放在了原生DOM元素上，获取的数据就是原生DOM对象<ul><li>可以直接操作</li></ul></li><li>如果ref放在了组件对象上，获取的就是组件对象<ul><li>1:获取到DOM对象,通过this.$refs.sub.$el,进行操作</li></ul></li><li>对应的事件<ul><li>created 完成了数据的初始化，此时还未生成DOM，无法操作DOM</li><li>mounted 将数据已经装载到了DOM之上,可以操作DOM</li></ul></li></ul></li></ul><h4 id="mint-ui"><a href="#mint-ui" class="headerlink" title="mint-ui"></a>mint-ui</h4><ul><li>组件库</li><li>饿了么出品,element-ui 在PC端使用的</li><li>移动端版本 mint-ui</li><li><a href="https://mint-ui.github.io/#!/zh-cn" target="_blank" rel="noopener">https://mint-ui.github.io/#!/zh-cn</a></li><li>注意:<ul><li>如果是全部安装的方式<ul><li>1:在template中可以直接使用组件标签</li><li>2:在script中必须要声明，也就是引入组件对象（按需加载）</li></ul></li></ul></li></ul><h4 id="wappalyzer"><a href="#wappalyzer" class="headerlink" title="wappalyzer"></a>wappalyzer</h4><ul><li>获取到当前网站的使用的技术</li><li><a href="https://wappalyzer.com/download" target="_blank" rel="noopener">https://wappalyzer.com/download</a></li></ul><h4 id="vue-router"><a href="#vue-router" class="headerlink" title="vue-router"></a>vue-router</h4><ul><li>前端路由 核心就是锚点值的改变，根据不同的值，渲染指定DOM位置的不同数据</li><li>ui-router:锚点值改变，如何获取模板？ajax、</li><li>vue中，模板数据不是通过ajax请求来，而是调用函数获取到模板内容</li><li>核心：锚点值改变</li><li>以后看到vue开头，就知道必须Vue.use</li><li>vue的核心插件:<ul><li>vue-router 路由</li><li>vuex 管理全局共享数据</li></ul></li><li>使用方式<ul><li>1:下载 <code>npm i vue-router -S</code></li><li>2:在main.js中引入 <code>import VueRouter from &#39;vue-router&#39;;</code></li><li>3:安装插件 <code>Vue.use(VueRouter);</code></li><li>4:创建路由对象并配置路由规则<ul><li><code>let router = new VueRouter({ routes:[ {path:&#39;/home&#39;,component:Home}  ]   });</code></li></ul></li><li>5:将其路由对象传递给Vue的实例，options中<ul><li>options中加入 <code>router:router</code></li></ul></li><li>6:在app.vue中留坑 <code>&lt;router-view&gt;&lt;/router-view&gt;</code></li></ul></li></ul><h4 id="命名路由"><a href="#命名路由" class="headerlink" title="命名路由"></a>命名路由</h4><ul><li>需求，通过a标签点击，做页面数据的跳转</li><li>使用router-link标签<ul><li>1:去哪里 <code>&lt;router-link to=&quot;/beijing&quot;&gt;去北京&lt;/router-link&gt;</code></li><li>2:去哪里 <code>&lt;router-link :to=&quot;{name:&#39;bj&#39;}&quot;&gt;去北京&lt;/router-link&gt;</code><ul><li>更利于维护，如果修改了path，只修改路由配置中的path，该a标签会根据修改后的值生成href属性</li></ul></li></ul></li></ul><h4 id="参数router-link"><a href="#参数router-link" class="headerlink" title="参数router-link"></a>参数router-link</h4><ul><li>在vue-router中，有两大对象被挂载到了实例this</li><li>$route(只读、具备信息的对象)、$router(具备功能函数)</li><li>查询字符串<ul><li>1:去哪里 <code>&lt;router-link :to=&quot;{name:&#39;detail&#39;,query:{id:1}  } &quot;&gt;xxx&lt;/router-link&gt;</code></li><li>2:导航(查询字符串path不用改) <code>{ name:&#39;detail&#39; , path:&#39;/detail&#39;,组件}</code></li><li>3:去了干嘛,获取路由参数(要注意是query还是params和对应id名)<ul><li><code>this.$route.query.id</code></li></ul></li></ul></li><li>path方式<ul><li>1:去哪里 <code>&lt;router-link :to=&quot;{name:&#39;detail&#39;,params:{name:1}  } &quot;&gt;xxx&lt;/router-link&gt;</code></li><li>2:导航(path方式需要在路由规则上加上/:xxx) </li><li><code>{ name:&#39;detail&#39; , path:&#39;/detail/:name&#39;,组件}</code></li><li>3:去了干嘛,获取路由参数(要注意是query还是params和对应name名)<ul><li><code>this.$route.params.name</code></li></ul></li></ul></li></ul><h4 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a>编程导航</h4><ul><li>不能保证用户一定会点击某些按钮</li><li>并且当前操作，除了路由跳转以外，还有一些别的附加操作</li><li>this.$router.go 根据浏览器记录 前进1 后退-1</li><li>this.$router.push(直接跳转到某个页面显示)<ul><li>push参数: 字符串 /xxx</li><li>对象 :  <code>{name:&#39;xxx&#39;,query:{id:1},params:{name:2}  }</code></li></ul></li></ul><h4 id="复习-1"><a href="#复习-1" class="headerlink" title="复习"></a>复习</h4><ul><li>过滤器，全局，组件内</li><li>获取DOM元素 ，在元素上ref=”xxx”</li><li>在代码中通过this.$refs.xxx 获取其元素<ul><li>原生DOM标签获取就是原生DOM对象</li><li>如果是组件标签，获取的就是组件对象  $el继续再获取DOM元素</li></ul></li><li>声明周期事件(钩子)回调函数<ul><li>created: 数据的初始化、DOM没有生成</li><li>mounted: 将数据装载到DOM元素上，此时有DOM</li></ul></li><li>路由<ul><li><code>window.addEventListener(&#39;hashchange&#39;,fn);</code></li><li>根据你放<code>&lt;router-view&gt;&lt;/router-view&gt;&lt;div id=&quot;xxx&quot;&gt;&lt;/div&gt;</code> 作为一个DOM上的标识</li><li>最终当锚点值改变触发hashchange的回调函数，我们将指定的模板数据插入到DOM标识上</li></ul></li></ul><h4 id="重定向和404"><a href="#重定向和404" class="headerlink" title="重定向和404"></a>重定向和404</h4><ul><li>进入后，默认就是/</li><li>重定向 <code>{ path:&#39;/&#39; ,redirect:&#39;/home&#39;  }</code></li><li>重定向 <code>{ path:&#39;/&#39; ,redirect:{name:&#39;home&#39;}  }</code></li><li>404 : 在路由规则的最后的一个规则<ul><li>写一个很强大的匹配</li><li><code>{ path:&#39;*&#39; , component:notFoundVue}</code></li></ul></li></ul><h4 id="多视图"><a href="#多视图" class="headerlink" title="多视图"></a>多视图</h4><ul><li>以前可以一次放一个坑对应一个路由和显示一个组件<ul><li>一次行为 = 一个坑 + 一个路由 + 一个组件</li><li>一次行为 = 多个坑 + 一个路由 + 多个组件</li></ul></li><li>components 多视图 是一个对象 对象内多个key和value<ul><li>key对应视图的name属性</li><li>value 就是要显示的组件对象</li></ul></li><li>多个视图<code>&lt;router-view&gt;&lt;/router-view&gt;</code> -&gt; name就是default</li><li><code>&lt;router-view name=&#39;xxx&#39;&gt;&lt;/router-view&gt;</code> -&gt; name就是xxx</li></ul><h4 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h4><ul><li>用单页去实现多页应用，复杂的嵌套路由</li><li>开发中一般会需要使用</li><li>视图包含视图</li><li>路由父子级关系路由</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">期组件内包含着第一层router-view</span><br><span class="line">&#123; <span class="attr">name</span>:<span class="string">'music'</span> ,<span class="attr">path</span>:<span class="string">'/music'</span>, <span class="attr">component</span>:Music ,</span><br><span class="line">children:[   子路由的path /就是绝对路径   不/就是相对父级路径</span><br><span class="line">    &#123;<span class="attr">name</span>:<span class="string">'music.oumei'</span> ,<span class="attr">path</span>:<span class="string">'oumei'</span>, <span class="attr">component</span>:Oumei &#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>:<span class="string">'music.guochan'</span> ,<span class="attr">path</span>:<span class="string">'guochan'</span>, <span class="attr">component</span>:Guochan &#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="vue-resource-了解"><a href="#vue-resource-了解" class="headerlink" title="vue-resource(了解)"></a>vue-resource(了解)</h4><ul><li>可以安装插件，早期vue团队开发的插件</li><li>停止维护了，作者推荐使用axios</li><li>options预检请求，是当浏览器发现跨域 + application/json的请求，就会自动发起</li><li>并且发起的时候携带了一个content-type的头</li></ul><h4 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h4><ul><li><a href="https://segmentfault.com/a/1190000008470355?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">https://segmentfault.com/a/1190000008470355?utm_source=tuicool&amp;utm_medium=referral</a></li><li>post请求的时候，如果数据是字符串 默认头就是键值对，否则是对象就是application/json</li><li>this.$axios.get(url,options)</li><li>this.$axios.post(url,data,options)</li><li>options:{ params:{id:1}//查询字符串, headers:{ ‘content-type’:’xxxxx’ },baseURL:’’  }</li><li>全局默认设置 ：Axios.defaults.baseURL = ‘xxxxx’;</li><li>针对当前这一次请求的相关设置</li></ul><h4 id="如何练习"><a href="#如何练习" class="headerlink" title="如何练习"></a>如何练习</h4><ul><li>1:路由核心<ul><li>路由基本使用</li><li>任选一种路由参数的方式(查询字符串)</li><li>404(路由匹配规则)</li><li>嵌套路由</li><li>编程导航</li></ul></li><li>2:http请求<ul><li>axios 发起get、post请求 （300）</li><li>获取 <a href="http://182.254.146.100:8899/api/getcomments/300?pageindex=1" target="_blank" rel="noopener">http://182.254.146.100:8899/api/getcomments/300?pageindex=1</a></li><li>发起 <a href="http://182.254.146.100:8899/api/postcomment/300" target="_blank" rel="noopener">http://182.254.146.100:8899/api/postcomment/300</a></li><li>axios挂载属性方式</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;vue-router、axios&quot;&gt;&lt;a href=&quot;#vue-router、axios&quot; class=&quot;headerlink&quot; title=&quot;vue-router、axios&quot;&gt;&lt;/a&gt;vue-router、axios&lt;/h2&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://superbeyone.info/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://superbeyone.info/tags/Vue/"/>
    
      <category term="学习笔记" scheme="http://superbeyone.info/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="前端开发" scheme="http://superbeyone.info/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>MySQL</title>
    <link href="http://superbeyone.info/MySQL.html"/>
    <id>http://superbeyone.info/MySQL.html</id>
    <published>2018-04-13T14:28:34.752Z</published>
    <updated>2018-01-26T06:20:00.423Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><h3 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h3><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE configuration  </span><br><span class="line">  PUBLIC <span class="string">"-//mybatis.org//DTD Config 3.0//EN"</span>  </span><br><span class="line">  <span class="string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;environments default=<span class="string">"development"</span>&gt;</span><br><span class="line">&lt;environment id=<span class="string">"development"</span>&gt;</span><br><span class="line">&lt;!-- 使用JDBC事务管理 --&gt;</span><br><span class="line">&lt;transactionManager <span class="built_in">type</span>=<span class="string">"JDBC"</span>&gt;&lt;/transactionManager&gt;</span><br><span class="line">&lt;!-- 数据库连接池 --&gt;</span><br><span class="line">&lt;dataSource <span class="built_in">type</span>=<span class="string">"POOLED"</span>&gt;</span><br><span class="line">&lt;property name=<span class="string">"driver"</span> value=<span class="string">"com.mysql.jdbc.Driver"</span> /&gt;</span><br><span class="line">&lt;property name=<span class="string">"url"</span></span><br><span class="line">value=<span class="string">"com.mysql://localhost:3306/mybatis?useUnicode=true&amp;amp;characterEncoding=utf8"</span> /&gt;</span><br><span class="line">&lt;property name=<span class="string">"username"</span> value=<span class="string">"root"</span> /&gt;</span><br><span class="line">&lt;property name=<span class="string">"password"</span> value=<span class="string">"root"</span> /&gt;</span><br><span class="line">&lt;/dataSource&gt;</span><br><span class="line">&lt;/environment&gt;</span><br><span class="line">&lt;/environments&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MySQL&quot;&gt;&lt;a href=&quot;#MySQL&quot; class=&quot;headerlink&quot; title=&quot;MySQL&quot;&gt;&lt;/a&gt;MySQL&lt;/h2&gt;&lt;h3 id=&quot;数据库连接&quot;&gt;&lt;a href=&quot;#数据库连接&quot; class=&quot;headerlink&quot; title=&quot;数据库连接&quot;&gt;&lt;/a&gt;数据库连接&lt;/h3&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://superbeyone.info/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://superbeyone.info/tags/MySQL/"/>
    
      <category term="Java" scheme="http://superbeyone.info/tags/Java/"/>
    
      <category term="JDBC" scheme="http://superbeyone.info/tags/JDBC/"/>
    
  </entry>
  
  <entry>
    <title>IKAnalyzer</title>
    <link href="http://superbeyone.info/IKAnalyzer.html"/>
    <id>http://superbeyone.info/IKAnalyzer.html</id>
    <published>2018-04-13T14:28:34.749Z</published>
    <updated>2018-01-26T06:19:30.778Z</updated>
    
    <content type="html"><![CDATA[<h2 id="IKAnalyzer"><a href="#IKAnalyzer" class="headerlink" title="IKAnalyzer"></a>IKAnalyzer</h2><p>IKAnalyzer <a href="https://code.google.com/archive/p/ik-analyzer/downloads" target="_blank" rel="noopener">下载官网</a><br>IKAnalyzer <a href="http://code.google.com/p/ik-analyzer/" target="_blank" rel="noopener">开源项目</a><br><img src="http://img.blog.csdn.net/20170424094938798?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc3VwZXJiZXlvbmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;IKAnalyzer&quot;&gt;&lt;a href=&quot;#IKAnalyzer&quot; class=&quot;headerlink&quot; title=&quot;IKAnalyzer&quot;&gt;&lt;/a&gt;IKAnalyzer&lt;/h2&gt;&lt;p&gt;IKAnalyzer &lt;a href=&quot;https://code.googl
      
    
    </summary>
    
      <category term="IKAnalyzer" scheme="http://superbeyone.info/categories/IKAnalyzer/"/>
    
    
      <category term="Java" scheme="http://superbeyone.info/tags/Java/"/>
    
      <category term="IKAnalyzer" scheme="http://superbeyone.info/tags/IKAnalyzer/"/>
    
  </entry>
  
  <entry>
    <title>免费VPN</title>
    <link href="http://superbeyone.info/FreeVpn.html"/>
    <id>http://superbeyone.info/FreeVpn.html</id>
    <published>2018-04-13T14:28:34.746Z</published>
    <updated>2018-04-13T14:15:27.412Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Free-VPN"><a href="#Free-VPN" class="headerlink" title="Free VPN"></a>Free VPN</h2><a id="more"></a><p>The following VPN services have a free mode, but remember that somebody has to pay for the bandwidth, hardware and maintenance.</p><p>One way or another they will get their money, mostly by trying to get you to upgrade limiting what you can do, for example, no video streaming or P2P. Other providers will show advertisements, and one or two could be a scam logging username and passwords. To ward off fraud it is best to stick with VPN companies that have been around for a long time, tell you who they are and how they make their money.</p><h3 id="Unlimited-band-width-free-VPN"><a href="#Unlimited-band-width-free-VPN" class="headerlink" title="Unlimited band width free VPN"></a>Unlimited band width free VPN</h3><h4 id="VPNBook"><a href="#VPNBook" class="headerlink" title="VPNBook"></a>VPNBook</h4><p><a href="http://www.vpnbook.com/" target="_blank" rel="noopener">VPNBook</a>: Free VPN provider with servers in the USA, UK and Romania. You can choose PPTP for mobile devices or the more secure OpenVPN protocol. Their website contains a username and password that you will need to log into the VPN, it changes daily and you have to visit again to find out the new login credentials.</p><h4 id="ShellFire-VPN"><a href="#ShellFire-VPN" class="headerlink" title="ShellFire VPN"></a>ShellFire VPN</h4><p><a href="https://www.shellfire.net/?sAction=Pricing" target="_blank" rel="noopener">ShellFire VPN</a>: Unlimited bandwidth with a speed limit of 1Mbps, this is more than enough to browse the Internet, you should be able to stream video too as long as it is not in high definition. The free option gives you access to servers in the US and Germany, if you wish to have more bandwidth and servers you will have to upgrade.</p><h4 id="WifiProtector"><a href="#WifiProtector" class="headerlink" title="WifiProtector"></a>WifiProtector</h4><p><a href="http://wifiprotector.com/" target="_blank" rel="noopener">WifiProtector</a>: The free version of this VPN will ask you if you want to install adaware, you can skip the step, make sure to read everything. You will also be shown advertisements as you surf the Internet, this is how the company pays for the free VPN service they provide to you.</p><h4 id="HotSpotShield"><a href="#HotSpotShield" class="headerlink" title="HotSpotShield"></a>HotSpotShield</h4><p><a href="http://www.hotspotshield.com/" target="_blank" rel="noopener">HotSpotShield</a>: One of the most popular VPN services in the world. It gives you a USA computer IP able to stream online video. There is no bandwidth limit but you will be shown advertisements that pay for the service.</p><h4 id="Betternet"><a href="#Betternet" class="headerlink" title="Betternet"></a>Betternet</h4><p><a href="https://www.betternet.co/" target="_blank" rel="noopener">Betternet</a>: Provider with no bandwidth limit or restrictions of any kind, the company has a transparency report with income and expenses in their website and they disclose that the free VPN is funded with the installation of free apps, in exchange for this you will not be shown advertisements and no data will be sold.</p><h4 id="VPNGate"><a href="#VPNGate" class="headerlink" title="VPNGate"></a>VPNGate</h4><p><a href="http://www.vpngate.net/en/" target="_blank" rel="noopener">VPNGate</a>: A network of P2P volunteer run nodes, coordinated by the University of Tsukuba in Japan, their aim is to help people bypass ISP censorship. You can choose one of the dozens of available countries but you have no way to know who is running the node and if they are looking at what you do or not.</p><h4 id="LimitlessVPN"><a href="#LimitlessVPN" class="headerlink" title="LimitlessVPN"></a>LimitlessVPN</h4><p><a href="https://limitlessvpn.com/" target="_blank" rel="noopener">LimitlessVPN</a>: Company offers free VPN with unlimited bandwidth in exchange for you allowing them to mine Bitcoins in your computer. According to them the use very little processing power.</p><h4 id="SpotFlux"><a href="#SpotFlux" class="headerlink" title="SpotFlux"></a>SpotFlux</h4><p><a href="http://www.spotflux.com/" target="_blank" rel="noopener">SpotFlux</a>: Ad supported USA based VPN giving you a USA computer IP without any speed limit and able to stream online video. Websites you visit are automatically scanned for malware.</p><h4 id="UltraSurf"><a href="#UltraSurf" class="headerlink" title="UltraSurf"></a>UltraSurf</h4><p><a href="http://ultrasurf.us/" target="_blank" rel="noopener">UltraSurf</a>: Portable free VPN service and software to help people circumvent ISP censorship. It only runs in Windows Internet Explorer, they have a separate Firefox browser addon download.</p><h4 id="FreeVPN-me"><a href="#FreeVPN-me" class="headerlink" title="FreeVPN.me"></a>FreeVPN.me</h4><p><a href="https://freevpn.me/accounts/" target="_blank" rel="noopener">FreeVPN.me</a>: New free VPN provider that claims they don’t log VPN usage, allow torrents and have unlimited bandwidth. When something seems too good to be truth, be cautious.</p><h4 id="ProtonVPN"><a href="#ProtonVPN" class="headerlink" title="ProtonVPN"></a>ProtonVPN</h4><p><a href="https://protonvpn.com/" target="_blank" rel="noopener">ProtonVPN</a>: No logs VPN with no bandwidth limit, the constraints of this free VPN are that speed is low and only three countries are available. There is the possibility of paying for it and getting many more features.</p><h3 id="Free-VPN-limited-by-bandwidth"><a href="#Free-VPN-limited-by-bandwidth" class="headerlink" title="Free VPN limited by bandwidth"></a>Free VPN limited by bandwidth</h3><h4 id="Faceless"><a href="#Faceless" class="headerlink" title="Faceless"></a>Faceless</h4><p><a href="http://faceless.me/" target="_blank" rel="noopener">Faceless</a>: Free VPN version gives you 2GB bandwidth a month, with limited choice of servers and speed but as secure as their paid for version, with no logs kept and the same level of encryption.</p><h4 id="Traceless"><a href="#Traceless" class="headerlink" title="Traceless"></a>Traceless</h4><p><a href="https://traceless.me/" target="_blank" rel="noopener">Traceless</a>: Zero logs VPN provider in Germany that offers 5GB/month for free using their Dutch or German server. The paid plan gives you access to more servers and unlimited bandwidth.</p><h4 id="WindScribe"><a href="#WindScribe" class="headerlink" title="WindScribe"></a>WindScribe</h4><p><a href="https://windscribe.com/" target="_blank" rel="noopener">WindScribe</a>: Freemium no logs VPN service based in Canada, this is a new company currently running a promotion offering 10GB/month for free, at some point in the future the free VPN will be reduced to 2GB/month.</p><h4 id="IDcloak"><a href="#IDcloak" class="headerlink" title="IDcloak"></a>IDcloak</h4><p><a href="http://www.idcloak.com/vpn-proxy/vpn-service.html" target="_blank" rel="noopener">IDcloak</a>: They give you 256MB of daily usage for free with no advertisements, with the hope that you will like their services an upgrade to a paid for unlimited bandwidth package.</p><h4 id="ZPN-im"><a href="#ZPN-im" class="headerlink" title="ZPN.im"></a>ZPN.im</h4><p><a href="https://zpn.im/" target="_blank" rel="noopener">ZPN.im</a>: Provider offers 10GB/month for free in 5 locations, no P2P allowed. There are premium plans with more servers and unlimited bandwidth, this provider has an extensive VPN network, and they claim they don’t log traffic but there is no mention about what they do with connection logs.</p><h4 id="SecurityKiss"><a href="#SecurityKiss" class="headerlink" title="SecurityKiss"></a>SecurityKiss</h4><p><a href="http://www.securitykiss.com/" target="_blank" rel="noopener">SecurityKiss</a>: Ireland based VPN provider giving you 300MB daily usage with no advertisements or speed limit. They keep VPN logs for ten days to stop abuse.</p><h4 id="TunnelBear"><a href="#TunnelBear" class="headerlink" title="TunnelBear"></a>TunnelBear</h4><p><a href="https://www.tunnelbear.com/" target="_blank" rel="noopener">TunnelBear</a>: VPN service offers 500MB of free bandwidth every month, this can be extended with an extra 1GB if you Tweet about the company.</p><h4 id="SumRando"><a href="#SumRando" class="headerlink" title="SumRando"></a>SumRando</h4><p><a href="https://www.sumrando.com/" target="_blank" rel="noopener">SumRando</a>: South African based VPN company offering 1GB/month of free bandwidth funded with advertisements. There is the option to pay to get rid of adverts and increase the available bandwidth.</p><h4 id="Hide-me"><a href="#Hide-me" class="headerlink" title="Hide.me"></a>Hide.me</h4><p><a href="https://hide.me/" target="_blank" rel="noopener">Hide.me</a>: Free VPN service gives you 2GB/month of available bandwidth in two locations with speed only allocated if paying customers do not need that capacity.</p><h4 id="TorVPN"><a href="#TorVPN" class="headerlink" title="TorVPN"></a>TorVPN</h4><p><a href="http://torvpn.com/" target="_blank" rel="noopener">TorVPN</a>: Account will be erased if not used for one week, there is a 1GB/month bandwidth limit and the free VPN blocks websites like Paypal and eBay to stop fraud.</p><h4 id="Hideman"><a href="#Hideman" class="headerlink" title="Hideman"></a>Hideman</h4><p><a href="http://www.hideman.net/" target="_blank" rel="noopener">Hideman</a>: VPN service giving you free 2GB/month a week of usage, the company does not keep logs for paying users but for free users they keep two weeks of data transfer logs, free version does not have USA or UK node.</p><h3 id="Free-VPN-limited-by-time"><a href="#Free-VPN-limited-by-time" class="headerlink" title="Free VPN limited by time"></a>Free VPN limited by time</h3><h4 id="CyberGhostVPN"><a href="#CyberGhostVPN" class="headerlink" title="CyberGhostVPN"></a>CyberGhostVPN</h4><p><a href="http://www.cyberghostvpn.com" target="_blank" rel="noopener">CyberGhostVPN</a>: The free version has unlimited bandwidth but it disconnects every 3 hours and you might not be able to use the free VPN to stream video as highly demanded locations like the USA and UK are not always available.</p><h4 id="VPNReactor"><a href="#VPNReactor" class="headerlink" title="VPNReactor"></a>VPNReactor</h4><p><a href="http://www.vpnreactor.com/" target="_blank" rel="noopener">VPNReactor</a>: USA based VPN provider giving you free daily 30 minutes access, after that the VPN disconnects and you have to wait 30 minutes before you can reconnect. Once a month you are also sent a confirmation email to corroborate that you still want to use their services.</p><h4 id="WormholeVPN"><a href="#WormholeVPN" class="headerlink" title="WormholeVPN"></a>WormholeVPN</h4><p><a href="https://wormholevpn.net/" target="_blank" rel="noopener">WormholeVPN</a>: VPN service with servers in the US and Asia, the free version expires after 2 days, after which time you have to renew the account, terms and conditions indicate that renewal can be done indefinetely.</p><h3 id="Free-VPN-for-iOS-and-Android"><a href="#Free-VPN-for-iOS-and-Android" class="headerlink" title="Free VPN for iOS and Android"></a>Free VPN for iOS and Android</h3><h4 id="Tenta-Browser"><a href="#Tenta-Browser" class="headerlink" title="Tenta Browser"></a>Tenta Browser</h4><p><a href="https://tenta.com/" target="_blank" rel="noopener">Tenta Browser</a>: Currently only for Android (other platforms to follow). PIN protected privacy browser with a free unlimited built-in VPN, Incognito browsing and encrypted visited pages storage.</p><h4 id="Onavo"><a href="#Onavo" class="headerlink" title="Onavo"></a>Onavo</h4><p><a href="http://www.onavo.com/" target="_blank" rel="noopener">Onavo</a>: This mobile VPN is free but you have to agree to have your data and app usage analysed. There is no clear information about how the product is funded.</p><h4 id="Opera-VPN"><a href="#Opera-VPN" class="headerlink" title="Opera VPN"></a>Opera VPN</h4><p><a href="http://www.opera.com/apps" target="_blank" rel="noopener">Opera VPN</a>: From Opera browser developers, this app for Android and iPhone provides you with a free unlimited bandwidth VPN. Just be aware that the logging policy is not clear, but if you are not concerned about logs, this is a good smartphone VPN.</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Free-VPN&quot;&gt;&lt;a href=&quot;#Free-VPN&quot; class=&quot;headerlink&quot; title=&quot;Free VPN&quot;&gt;&lt;/a&gt;Free VPN&lt;/h2&gt;
    
    </summary>
    
      <category term="科学上网" scheme="http://superbeyone.info/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    
      <category term="free" scheme="http://superbeyone.info/tags/free/"/>
    
      <category term="vpn" scheme="http://superbeyone.info/tags/vpn/"/>
    
  </entry>
  
  <entry>
    <title>c3p0连接池</title>
    <link href="http://superbeyone.info/c3p0%E8%BF%9E%E6%8E%A5%E6%B1%A0%E7%9A%84%E4%BD%BF%E7%94%A8.html"/>
    <id>http://superbeyone.info/c3p0连接池的使用.html</id>
    <published>2018-01-26T05:58:04.822Z</published>
    <updated>2018-01-26T06:38:38.429Z</updated>
    
    <content type="html"><![CDATA[<h2 id="c3p0连接池的使用"><a href="#c3p0连接池的使用" class="headerlink" title="c3p0连接池的使用"></a>c3p0连接池的使用</h2><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- c3p0连接池 --&gt;</span><br><span class="line">&lt;bean id=<span class="string">"dataSource"</span> class=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span> destroy-method=<span class="string">"close"</span>&gt;</span><br><span class="line">&lt;property name=<span class="string">"driverClass"</span> value=<span class="string">"com.mysql.jdbc.Driver"</span> /&gt;</span><br><span class="line">&lt;property name=<span class="string">"jdbcUrl"</span> value=<span class="string">"jdbc:mysql://localhost:3306/test?useUnicode=true&amp;amp;characterEncoding=utf8"</span>/&gt;</span><br><span class="line">&lt;property name=<span class="string">"user"</span> value=<span class="string">"root"</span> /&gt;</span><br><span class="line">&lt;property name=<span class="string">"password"</span> value=<span class="string">"root"</span> /&gt;</span><br><span class="line">&lt;!--连接池中保留的最小连接数。--&gt;</span><br><span class="line">&lt;property name=<span class="string">"minPoolSize"</span> value=<span class="string">"5"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--连接池中保留的最大连接数。Default: 15 --&gt;</span><br><span class="line">&lt;property name=<span class="string">"maxPoolSize"</span> value=<span class="string">"30"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 --&gt;</span><br><span class="line">&lt;property name=<span class="string">"initialPoolSize"</span> value=<span class="string">"10"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 --&gt;</span><br><span class="line">&lt;property name=<span class="string">"maxIdleTime"</span> value=<span class="string">"60"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 --&gt;</span><br><span class="line">&lt;property name=<span class="string">"acquireIncrement"</span> value=<span class="string">"5"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements </span><br><span class="line">属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 </span><br><span class="line">如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0--&gt;</span><br><span class="line">&lt;property name=<span class="string">"maxStatements"</span> value=<span class="string">"0"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--每60秒检查所有连接池中的空闲连接。Default: 0 --&gt;</span><br><span class="line">&lt;property name=<span class="string">"idleConnectionTestPeriod"</span> value=<span class="string">"60"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 --&gt;</span><br><span class="line">&lt;property name=<span class="string">"acquireRetryAttempts"</span> value=<span class="string">"30"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为<span class="literal">true</span>，那么在尝试 </span><br><span class="line">获取连接失败后该数据源将申明已断开并永久关闭。Default: <span class="literal">false</span>--&gt;</span><br><span class="line">&lt;property name=<span class="string">"breakAfterAcquireFailure"</span> value=<span class="string">"true"</span> /&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;c3p0连接池的使用&quot;&gt;&lt;a href=&quot;#c3p0连接池的使用&quot; class=&quot;headerlink&quot; title=&quot;c3p0连接池的使用&quot;&gt;&lt;/a&gt;c3p0连接池的使用&lt;/h2&gt;
    
    </summary>
    
      <category term="c3p0" scheme="http://superbeyone.info/categories/c3p0/"/>
    
    
      <category term="Java" scheme="http://superbeyone.info/tags/Java/"/>
    
      <category term="c3p0" scheme="http://superbeyone.info/tags/c3p0/"/>
    
  </entry>
  
</feed>
